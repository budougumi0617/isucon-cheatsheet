user  www-data;
# 自動でプロセス数起動する。
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host";

    access_log  /var/log/nginx/access.log ltsv;
    # access_log off;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
      # 複数serverへ proxy
    upstream backend {
        least_conn; # ロードバランスロジック。
        server localhost:1323;
        # server xxx.xxx.xxx:1323;
        # keepalive 60; app server への connection を keepalive する。app が対応できるならした方が良い。
    }
    # 直書きしたほうがラク。
    # include /etc/nginx/sites-enabled/*.conf;
    server {
        root /home/isucon/isucon10-qualify/webapp/public;
        listen 80 default_server;
        listen [::]:80 default_server;

        location /api {
           proxy_pass http://backend;
           proxy_set_header Host $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # クライアントの IP アドレス
           proxy_set_header X-Forwarded-Host $host; # オリジナルのホスト名。クライアントが Host リクエストヘッダで渡す。
           proxy_set_header X-Forwarded-Server $host; # プロキシサーバのホスト名
           proxy_set_header X-Real-IP $remote_addr;
        }

        location /initialize {
            proxy_pass http://localhost:1323;
        }

        location / {
            root /www/data;
        }
        # 静的ファイルはキャッシュする。
        location ~ .*\.(htm|html|css|js|jpg|png|gif|ico) {
            expires 2m;
            add_header Cache-Control public;
            open_file_cache max=100;  # file descriptor などを cache
        }
    }
}
